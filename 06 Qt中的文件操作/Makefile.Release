#############################################################################
# Makefile for building: File
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? 7? 1 19:25:40 2021
# Project:  File.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I'd:/Qt/4.7.4/include/QtCore' -I'd:/Qt/4.7.4/include' -I'd:/Qt/4.7.4/include/ActiveQt' -I'release' -I'd:/Qt/4.7.4/mkspecs/win32-g++'
LINK        =        g++
LFLAGS        =        -Wl,-s -Wl,-subsystem,console -mthreads
LIBS        =        -L'd:/Qt/4.7.4/lib' -lQtCore4 
QMAKE         = d:/qt/4.7.4/bin/qmake.exe
IDC           = d:/Qt/4.7.4/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = cp
COPY_FILE     = $(COPY)
COPY_DIR      = cp -r
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = main.cpp 
OBJECTS       = release/main.o
DIST          = 
QMAKE_TARGET  = File
DESTDIR        = release/ #avoid trailing-slash linebreak
TARGET         = File.exe
DESTDIR_TARGET = release/File.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec d:/Qt/4.7.4/mkspecs/win32-g++ -o Makefile.Release File.pro

dist:
	$(ZIP) File.zip $(SOURCES) $(DIST) File.pro d:/Qt/4.7.4/mkspecs/qconfig.pri d:/Qt/4.7.4/mkspecs/modules/qt_webkit_version.pri d:/Qt/4.7.4/mkspecs/features/qt_functions.prf d:/Qt/4.7.4/mkspecs/features/qt_config.prf d:/Qt/4.7.4/mkspecs/features/exclusive_builds.prf d:/Qt/4.7.4/mkspecs/features/default_pre.prf d:/Qt/4.7.4/mkspecs/features/win32/default_pre.prf d:/Qt/4.7.4/mkspecs/features/release.prf d:/Qt/4.7.4/mkspecs/features/debug_and_release.prf d:/Qt/4.7.4/mkspecs/features/default_post.prf d:/Qt/4.7.4/mkspecs/features/win32/default_post.prf d:/Qt/4.7.4/mkspecs/features/build_pass.prf d:/Qt/4.7.4/mkspecs/features/win32/console.prf d:/Qt/4.7.4/mkspecs/features/win32/rtti.prf d:/Qt/4.7.4/mkspecs/features/win32/exceptions.prf d:/Qt/4.7.4/mkspecs/features/win32/stl.prf d:/Qt/4.7.4/mkspecs/features/shared.prf d:/Qt/4.7.4/mkspecs/features/warn_on.prf d:/Qt/4.7.4/mkspecs/features/qt.prf d:/Qt/4.7.4/mkspecs/features/win32/thread.prf d:/Qt/4.7.4/mkspecs/features/moc.prf d:/Qt/4.7.4/mkspecs/features/resources.prf d:/Qt/4.7.4/mkspecs/features/uic.prf d:/Qt/4.7.4/mkspecs/features/yacc.prf d:/Qt/4.7.4/mkspecs/features/lex.prf d:/Qt/4.7.4/mkspecs/features/incredibuild_xge.prf d:/Qt/4.7.4/mkspecs/features/include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/main.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

